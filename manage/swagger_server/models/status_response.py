# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.status_event import StatusEvent  # noqa: F401,E501
from swagger_server import util


class StatusResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, port: str=None, _datetime: datetime=None, detect: bool=None, event: List[StatusEvent]=None, report_endpoint: str=None):  # noqa: E501
        """StatusResponse - a model defined in Swagger

        :param port: The port of this StatusResponse.  # noqa: E501
        :type port: str
        :param _datetime: The _datetime of this StatusResponse.  # noqa: E501
        :type _datetime: datetime
        :param detect: The detect of this StatusResponse.  # noqa: E501
        :type detect: bool
        :param event: The event of this StatusResponse.  # noqa: E501
        :type event: List[StatusEvent]
        :param report_endpoint: The report_endpoint of this StatusResponse.  # noqa: E501
        :type report_endpoint: str
        """
        self.swagger_types = {
            'port': str,
            '_datetime': datetime,
            'detect': bool,
            'event': List[StatusEvent],
            'report_endpoint': str
        }

        self.attribute_map = {
            'port': 'port',
            '_datetime': 'datetime',
            'detect': 'detect',
            'event': 'event',
            'report_endpoint': 'report_endpoint'
        }
        self._port = port
        self.__datetime = _datetime
        self._detect = detect
        self._event = event
        self._report_endpoint = report_endpoint

    @classmethod
    def from_dict(cls, dikt) -> 'StatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The status_response of this StatusResponse.  # noqa: E501
        :rtype: StatusResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def port(self) -> str:
        """Gets the port of this StatusResponse.

        ドローンポートを識別する値  # noqa: E501

        :return: The port of this StatusResponse.
        :rtype: str
        """
        return self._port

    @port.setter
    def port(self, port: str):
        """Sets the port of this StatusResponse.

        ドローンポートを識別する値  # noqa: E501

        :param port: The port of this StatusResponse.
        :type port: str
        """

        self._port = port

    @property
    def _datetime(self) -> datetime:
        """Gets the _datetime of this StatusResponse.

        立入り検知の日時  # noqa: E501

        :return: The _datetime of this StatusResponse.
        :rtype: datetime
        """
        return self.__datetime

    @_datetime.setter
    def _datetime(self, _datetime: datetime):
        """Sets the _datetime of this StatusResponse.

        立入り検知の日時  # noqa: E501

        :param _datetime: The _datetime of this StatusResponse.
        :type _datetime: datetime
        """

        self.__datetime = _datetime

    @property
    def detect(self) -> bool:
        """Gets the detect of this StatusResponse.

        立入り状態の代表値  # noqa: E501

        :return: The detect of this StatusResponse.
        :rtype: bool
        """
        return self._detect

    @detect.setter
    def detect(self, detect: bool):
        """Sets the detect of this StatusResponse.

        立入り状態の代表値  # noqa: E501

        :param detect: The detect of this StatusResponse.
        :type detect: bool
        """

        self._detect = detect

    @property
    def event(self) -> List[StatusEvent]:
        """Gets the event of this StatusResponse.

        立入り検知の情報  # noqa: E501

        :return: The event of this StatusResponse.
        :rtype: List[StatusEvent]
        """
        return self._event

    @event.setter
    def event(self, event: List[StatusEvent]):
        """Sets the event of this StatusResponse.

        立入り検知の情報  # noqa: E501

        :param event: The event of this StatusResponse.
        :type event: List[StatusEvent]
        """

        self._event = event

    @property
    def report_endpoint(self) -> str:
        """Gets the report_endpoint of this StatusResponse.

        レポートファイルのエンドポイント  # noqa: E501

        :return: The report_endpoint of this StatusResponse.
        :rtype: str
        """
        return self._report_endpoint

    @report_endpoint.setter
    def report_endpoint(self, report_endpoint: str):
        """Sets the report_endpoint of this StatusResponse.

        レポートファイルのエンドポイント  # noqa: E501

        :param report_endpoint: The report_endpoint of this StatusResponse.
        :type report_endpoint: str
        """

        self._report_endpoint = report_endpoint
